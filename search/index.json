[{"content":" Introduction Fedora Workstation comes with vanilla GNOME as its desktop environment, which is, in my opinion, a bit too bare-bones for everyday tasks. A few actions can be taken to improve this experience. This article will examine what to do following the installation of Fedora Workstation 41. Keep in mind that this is by no means an exhaustive list.\nTo-Do Assign Keyboard Shortcut to Launch Terminal Out of the box, there is no keyboard shortcut available to open a terminal. To assign a keyboard shortcut to open the terminal of your choice,\nGo to Settings \u0026gt; Keyboard \u0026gt; Click on View and Customize Shortcuts from the \u0026ldquo;Keyboard Shortcuts\u0026rdquo; Section \u0026gt; Scroll down to Custom Shortcuts \u0026gt; Click Add Shortcut.\nA pop-up window requesting a Name, Command, and Shortcut will appear.\nIn the Name field, enter Ptyxis as the name. In the Command field, enter ptyxis. In the Shortcut field, press the key combination that you want to use to launch GNOME Terminal. For example, Ctrl + Alt + T. Click the Add button. Change Hostname The default hostname is \u0026ldquo;fedora\u0026rdquo;. Change it to your liking to make it easily discoverable in your local network.\nTo change the hostname, open a terminal and issue the following command:\n1 sudo hostnamectl set-hostname \u0026#34;Penguin\u0026#34; In the example above, \u0026ldquo;Penguin\u0026rdquo; is the desired hostname.\nChange Swappiness The swappiness sysctl parameter represents the kernel\u0026rsquo;s preference for swap space. A lower swappiness value means that the kernel will be less likely to swap memory to disk. This can improve performance, but it can also lead to memory pressure if you do not have enough RAM.\nThe optimal swappiness value will vary depending on your system and your workload. You may need to experiment to find the value that works best for you.\nYou can check the current swappiness value by running the following command:\n1 sysctl vm.swappiness To set the swappiness value permanently, create a sysctl.d configuration file. For example:\n1 2 3 sudo mkdir -p /etc/sysctl.d sudo touch /etc/sysctl.d/local.conf printf \u0026#39;%s\\n\u0026#39; \u0026#39;vm.swappiness=10\u0026#39; | sudo tee /etc/sysctl.d/local.conf Run the following command to apply the changes:\n1 sudo sysctl -p /etc/sysctl.d/local.conf Enable Minimize or Maximize Button If you are not comfortable without the Minimize and Maximize window buttons, there is a way to bring them back.\nOpen a terminal and issue the following command to enable the minimize and maximize buttons:\n1 gsettings set org.gnome.desktop.wm.preferences button-layout \u0026#34;appmenu:minimize,maximize,close\u0026#34; The minimize and maximize buttons will now be enabled in all application windows.\nChange Appearance Fedora 41 Workstation offers both Light and Dark modes. Choose one from Settings \u0026gt; Appearance according to your liking.\nYou might as well change the desktop background if you want a more appealing look.\nTweak Privacy \u0026amp; Security Options File History \u0026amp; Trash \u0026ldquo;File History\u0026rdquo; feature makes it easier for you to find files that you might want to use. If you do not like the feature, go to Settings \u0026gt; Privacy \u0026amp; Security \u0026gt; File History \u0026amp; Trash and turn it off from the \u0026ldquo;File History\u0026rdquo; section.\nTrash and temporary files can sometimes include personal or sensitive information. Automatically deleting them can help to protect your privacy. I highly recommend you enable this feature.\nGo to Settings \u0026gt; Privacy \u0026amp; Security \u0026gt; File History \u0026amp; Trash \u0026gt; Enable Automatically Delete Trash Content and Automatically Delete Temporary Files from the \u0026ldquo;Trash \u0026amp; Temporary Files\u0026rdquo; section.\nMouse \u0026amp; Touchpad Since Fedora has a reputation for staying as close to upstream as possible, they follow the various defaults selected by the desktop environment upstreams. Generally, this entails a disabled touchpad click by default.\nTo enable tap to click, Go to Settings \u0026gt; Mouse \u0026amp; Touchpad \u0026gt; Enable Tap to Click from the \u0026ldquo;Touchpad\u0026rdquo; section.\nConfigure DNF DNF configuration file is located at /etc/dnf/dnf.conf. Behavior of DNF can be configured by editing this file.\nThe number of parallel downloads can be modified to get faster downloads if your internet connection is suitably fast.\nFirstly, open the DNF configuration file with nano:\n1 sudo nano /etc/dnf/dnf.conf Then append the following line and save:\n1 max_parallel_downloads=6 Enable 3rd Party Repositories Enable RPM Fusion RPM Fusion is a third-party repository that provides access to a wider range of software than what is available in the Fedora repositories.\nTo enable RPM Fusion, open a terminal and type the following command:\n1 2 sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm sudo dnf install https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm After that, install the appstream-data package so that Gnome Software or KDE Discover may be used to install GUI programs from RPM Fusion.\nThe following command will install the required packages:\n1 sudo dnf update @core Enable Flathub Flatpak is installed by default on Fedora Workstation. To begin, simply enable Flathub, which is the best way to obtain Flatpak apps.\nRun the following command to enable it:\n1 flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo That is it! You now have access to unfiltered Flathub on Fedora.\nUpdate System You should run a system update as soon as possible after installing Fedora. This will install the latest security patches and bug fixes, and it will also ensure that you have the latest version of all of your software.\nTo do this, open a terminal and run the following command:\n1 sudo dnf upgrade Install Media Codecs Fedora is a great Linux distribution, but it does not come with all the media codecs you might need out of the box. If you try to play a video or audio file that uses a codec that is not installed, you will get an error message.\nTo fix this, you need to install the necessary codecs. There are a few different ways to do this, but the easiest way is to use the RPM Fusion repository.\nUse a terminal to install packages that provide multimedia libraries from the RPM Fusion repository.\nSwitch to full FFmpeg The FFmpeg library that is shipped with Fedora 41 does not support H.264 decoding. Switch to the RPM Fusion\u0026rsquo;s better supported FFmpeg build and follow the next section for additional codecs or plugins.\n1 sudo dnf swap ffmpeg-free ffmpeg --allowerasing Install Additional Codec Install the additional multimedia packages required to enable the gstreamer framework-based application and other multimedia tools to playback other restricted codecs.\nTo do this, open a terminal and run the following commands:\n1 sudo dnf update @multimedia --setopt=\u0026#34;install_weak_deps=False\u0026#34; --exclude=PackageKit-gstreamer-plugin Enable DVD Playback Install the libdvdcss package from the RPM Fusion repository to enable DVD playback.\n1 2 sudo dnf install rpmfusion-free-release-tainted sudo dnf install libdvdcss Enable VA-API VA-API stands for Video Acceleration API. It is an open-source API that allows applications to use hardware video acceleration capabilities, usually provided by the GPU.\nVA-API is supported by a wide range of hardware vendors, including Intel, NVIDIA, and AMD. To enable VA-API on your system, you will need to install the appropriate drivers and libraries.\nPlease be aware that for VA-API to function as intended, the full FFmpeg build is required. Before continuing, make sure ffmpeg from the RPM Fusion repository is installed.\nIntel VA-API support for newer GPUs are provided by intel-media-driver. Visit upstream to see which platforms are supported by this driver.\nRun the following command to install it:\n1 sudo dnf install intel-media-driver VA-API support for older GPUs are provided by libva-intel-driver. Run the following command to install it:\n1 sudo dnf install libva-intel-driver AMD For AMD, run the following commands to enable VA-API:\n1 2 sudo dnf swap mesa-va-drivers mesa-va-drivers-freeworld sudo dnf swap mesa-vdpau-drivers mesa-vdpau-drivers-freeworld If using i686 compatibility libraries (e.g. Steam):\n1 2 sudo dnf swap mesa-va-drivers.i686 mesa-va-drivers-freeworld.i686 sudo dnf swap mesa-vdpau-drivers.i686 mesa-vdpau-drivers-freeworld.i686 Nvidia The Nvidia proprietary driver does not support VA-API, but there is a wrapper that can bridge NVDEC/NVENC with VA-API\nRun the following command to install it:\n1 sudo dnf install libva-nvidia-driver You can also install both 32bit and 64bit flavor in one command as needed.\n1 sudo dnf install libva-nvidia-driver.{i686,x86_64} Conclusion I hope this gives you a good starting point for getting started with Fedora 41. If you have any questions, please feel free to ask in the comments below.\n","date":"2024-10-31T00:00:00Z","image":"https://arcanesavant.github.io/p/2024/10/31/12-things-to-do-after-installing-fedora-workstation-41/fedora_hu12788665439769305664.jpg","permalink":"https://arcanesavant.github.io/p/2024/10/31/12-things-to-do-after-installing-fedora-workstation-41/","title":"12 Things to Do After Installing Fedora Workstation 41"},{"content":" Introduction Websites built with Static Site Generator (SSG) are faster, more secure, and dev-friendly. They are also easier for SEO. It can be difficult to choose a suitable SSG because there are many. However, Hugo and Jekyll are the most popular choices among developers.\nLet\u0026rsquo;s compare Hugo with Jekyll, shall we?\nComparison Ease of Install If you are a MacOS or Linux user, you can install Hugo with a single command. For instructions about how to install Hugo on other operating systems, follow the official installation guide.\nCommand for MacOS: brew install hugo\nCommand for Linux (Ubuntu): sudo apt install hugo\nInstalling Jekyll is not as straight forward as installing Hugo. However, there is an excellent installation guide to get started with Jekyll.\nExternal Dependencies Unlike many other static site generators, Hugo does not require any external dependencies to run. All you need is the Hugo binary.\nJekyll, on the other hand depends on Ruby. So, Ruby needs to be configured first in order to install Jekyll.\nSpeed Hugo is currently the fastest static site generator in the market. It can generate thousands of webpages in just a few seconds. That saves a lot of time when your site starts growing in size.\nJekyll is at least 3 times slower than Hugo. That means Jekyll needs significantly more time than Hugo to build the same site.\nFlexibility Hugo is very flexible in terms of content structure. It can be used to build various types of websites. For example, Blog, Documentation, Portfolio, and many others.\nOn the other hand, Jekyll is primarily recognized for its built-in features that facilitate the creation of comprehensive blogs. Additional functionalities can be integrated through various third-party plugins.\nTheme Availability Hugo offers a wide range of themes that are straightforward to customize. This aspect of Hugo themes allows developers to modify layouts, styles, and functionalities without extensive coding.\nJekyll also has a rich selection of themes, particularly for blogs. However, the customization of themes can sometimes be more complex due to the reliance on Ruby and plugins.\nConclusion Both Hugo and Jekyll present comparable features, making the decision between the two a challenging one. The choice is largely dependent on the specific needs and project requirements. As you may have noticed, I chose to build this website with Hugo. What are your thoughts on Hugo versus Jekyll? Which one would you prefer, and why? Share your opinions in the comments section below.\n","date":"2024-10-18T00:00:00Z","image":"https://arcanesavant.github.io/p/2024/10/18/hugo-versus-jekyll/hugo-versus-jekyll_hu10732924500354514240.png","permalink":"https://arcanesavant.github.io/p/2024/10/18/hugo-versus-jekyll/","title":"Hugo versus Jekyll"}]